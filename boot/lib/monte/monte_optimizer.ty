-':/?.+#,__mapExtract##run'!*#*astBuilder>'";+#!a <   .+#&import##run'"*#3lib/monte/monte_ast.+#)__makeMap#)fromPairs'!.+#*__makeList##run'8.+#*__makeList##run'"*#&NullOk+#&NullOk.+#*__makeList##run'"*#*DeepFrozen+#*DeepFrozen.+#*__makeList##run'"*#+__matchSame+#+__matchSame.+#*__makeList##run'"*#&__bind+#&__bind.+#*__makeList##run'"*##Map+##Map.+#*__makeList##run'"*#.__switchFailed+#.__switchFailed.+#*__makeList##run'"*##Int+##Int.+#*__makeList##run'"*##Str+##Str.+#*__makeList##run'"*#$Bool+#$Bool.+#*__makeList##run'"*#&Double+#&Double.+#*__makeList##run'"*#$Char+#$Char.+#*__makeList##run'"*#3simple__quasiParser+#3simple__quasiParser.+#*__makeList##run'"*#$List+#$List.+#*__makeList##run'"*#-__booleanFlow+#-__booleanFlow.+#*__makeList##run'"*#-__validateFor+#-__validateFor.+#*__makeList##run'"*#*__comparer+#*__comparer.+#*__makeList##run'"*#2__makeOrderedSpace+#2__makeOrderedSpace.+#*__makeList##run'"*#+__iterWhile+#+__iterWhile.+#*__makeList##run'"*#,__mapExtract+#,__mapExtract.+#*__makeList##run'"*#%bench+#%bench.+#*__makeList##run'"*#0__accumulateList+#0__accumulateList.+#*__makeList##run'"*#.__quasiMatcher+#.__quasiMatcher.+#*__makeList##run'"*#*__suchThat+#*__suchThat.+#*__makeList##run'"*#/__makeVerbFacet+#/__makeVerbFacet/?.+#,__mapExtract##run'!*#1term__quasiParser>'";+#1term__quasiParser <+#*__mapEmpty  .+#&import##run'"*#4lib/monte/termParser.+#)__makeMap#)fromPairs'!.+#*__makeList##run'8.+#*__makeList##run'"*#&NullOk+#&NullOk.+#*__makeList##run'"*#*DeepFrozen+#*DeepFrozen.+#*__makeList##run'"*#+__matchSame+#+__matchSame.+#*__makeList##run'"*#&__bind+#&__bind.+#*__makeList##run'"*##Map+##Map.+#*__makeList##run'"*#.__switchFailed+#.__switchFailed.+#*__makeList##run'"*##Int+##Int.+#*__makeList##run'"*##Str+##Str.+#*__makeList##run'"*#$Bool+#$Bool.+#*__makeList##run'"*#&Double+#&Double.+#*__makeList##run'"*#$Char+#$Char.+#*__makeList##run'"*#3simple__quasiParser+#3simple__quasiParser.+#*__makeList##run'"*#$List+#$List.+#*__makeList##run'"*#-__booleanFlow+#-__booleanFlow.+#*__makeList##run'"*#-__validateFor+#-__validateFor.+#*__makeList##run'"*#*__comparer+#*__comparer.+#*__makeList##run'"*#2__makeOrderedSpace+#2__makeOrderedSpace.+#*__makeList##run'"*#+__iterWhile+#+__iterWhile.+#*__makeList##run'"*#,__mapExtract+#,__mapExtract.+#*__makeList##run'"*#%bench+#%bench.+#*__makeList##run'"*#0__accumulateList+#0__accumulateList.+#*__makeList##run'"*#.__quasiMatcher+#.__quasiMatcher.+#*__makeList##run'"*#*__suchThat+#*__suchThat.+#*__makeList##run'"*#/__makeVerbFacet+#/__makeVerbFacet1 ;+#(sequence '! 2 '!3 ##run'";+#%exprs ;+#$span  0;+#(__return -'"9.+#+__equalizer#(sameEver'".+#%exprs#$size' *& .+#(__return##run'!.+#!a#+LiteralExpr'"+#$null+#$span.+#(__return##run'!9.+#+__equalizer#(sameEver'".+#%exprs#$size' *&".+#%exprs##get'!*& .+#!a#'SeqExpr'"+#%exprs+#$span+#$null  ' 1 ;+#2finalPatternToName '! 2 '!3 ##run'";+#'pattern ;+#"ej  0;+#(__return -'"-'"9-'"/>'!;+#%ok__1   9.+#+__equalizer#(sameEver'".+#'pattern#+getNodeName' *#,FinalPattern.+#*__makeList##run'!9.+#+__equalizer#(sameEver'".+#'pattern#(getGuard' +#$null+#$true+#%false.+#*__makeList##run'!+#%false+#%ok__1.+#(__return##run'!..+#'pattern#'getNoun' #'getName'  .+#"ej##run'!*#>Not an unguarded final pattern+#$null  ' 1#bSpecialize the given name to the given AST value via substitution.;+#*specialize '! 2 '!3 ##run'";+#$name ;+#%value  0;+#(__return -'"-'"1 ;+#5specializeNameToValue '! 2 '!3 ##run'$;+##ast ;+#%maker ;+#$args ;+#$span  0;+#(__return -'"-'&9-'"/>'!;+#%ok__2   9.+#+__equalizer#(sameEver'".+##ast#+getNodeName' *#,FinalPattern-'!.+#*__makeList##run'!+#$true9.+#+__equalizer#(sameEver'".+##ast#+getNodeName' *#*VarPattern-'!.+#*__makeList##run'!+#$true.+#*__makeList##run'!+#%false+#%ok__2-'#/;+#%guard  .+##ast#(getGuard' 9..+#+__equalizer#(sameEver'"+#%guard+#$null##not' .+#(__return##run'!.+#%maker##run'#.+#$args##get'!*& .+#%guard#)transform'!+#5specializeNameToValue+#$span .+#(__return##run'!+##ast /;+#%scope  .+##ast#.getStaticScope' 9...+#%scope#)namesUsed' #(contains'!+#$name##not' .+#(__return##run'!+##ast 9..+#%scope#(outNames' #(contains'!+#$name9.+#+__equalizer#(sameEver'".+##ast#+getNodeName' *#'SeqExpr-'$/=+#(newExprs  .+#*__makeList##run' /=+#&change  +#$true-'#/=+#,validFlag__3  +#$true6.+#&__loop##run'".+##ast#(getExprs' 1#-For-loop body< '! 2 '!3 ##run'";+#&key__4 ;+#(value__5  -'".+#-__validateFor##run'!+#,validFlag__3-'$/;+#!i  +#&key__4/;+#$expr  +#(value__5-'"9...+#$expr#.getStaticScope' #(outNames' #(contains'!+#$name5+#&change+#%false 5+#(newExprs.+#(newExprs#$with'!9+#&change..+#$args##get'!*& ##get'!+#!i+#$expr+#$null' 5+#,validFlag__3+#%false+#$null.+#(__return##run'!.+#%maker##run'"+#(newExprs+#$span.+#(__return##run'!+##ast 9-'"/>'!;+#%ok__6   9.+#+__equalizer#(sameEver'".+##ast#+getNodeName' *#(NounExpr.+#*__makeList##run'!9.+#+__equalizer#(sameEver'".+##ast#'getName' +#$name+#$true+#%false.+#*__makeList##run'!+#%false+#%ok__6.+#(__return##run'!+#%value .+#(__return##run'!.+#!M#$call'#+#%maker*##run.+#$args##add'!.+#*__makeList##run'!+#$span+#$null  ' .+#(__return##run'!+#5specializeNameToValue+#$null  ' 1 ;+#.testSpecialize '! 2 '!3 ##run'!;+#&assert  -'"-'#/;+##ast  .+#!a#'SeqExpr'".+#*__makeList##run'#.+#!a#(NounExpr'"*#!x+#$null.+#!a#'DefExpr'$.+#!a#,FinalPattern'#.+#!a#(NounExpr'"*#!x+#$null+#$null+#$null+#$null.+#!a#+LiteralExpr'"*&t+#$null+#$null.+#!a#(NounExpr'"*#!x+#$null+#$null/;+#&result  .+#!a#'SeqExpr'".+#*__makeList##run'#.+#!a#+LiteralExpr'"*&t+#$null.+#!a#'DefExpr'$.+#!a#,FinalPattern'#.+#!a#(NounExpr'"*#!x+#$null+#$null+#$null+#$null.+#!a#+LiteralExpr'"*&t+#$null+#$null.+#!a#(NounExpr'"*#!x+#$null+#$null.+#&assert#%equal'".+##ast#)transform'!.+#*specialize##run'"*#!x.+#!a#+LiteralExpr'"*&t+#$null+#&result+#$null' .+#(unittest##run'!.+#*__makeList##run'!+#.testSpecialize1#`Replace __booleanFlow.failureList(0) with __makeList.run(false).;+#2replaceBooleanFlow '! 2 '!3 ##run'$;+##ast ;+#%maker ;+#$args ;+#$span  0;+#(__return -'"-'"9.+#+__equalizer#(sameEver'".+##ast#+getNodeName' *#.MethodCallExpr-'$/;+#(receiver  .+##ast#+getReceiver' /;+#$verb  .+##ast#'getVerb' /;+#)arguments  .+##ast#'getArgs' 9-'"/>'!;+#%ok__7   9.+#+__equalizer#(sameEver'".+#(receiver#+getNodeName' *#(NounExpr.+#*__makeList##run'!9.+#+__equalizer#(sameEver'".+#(receiver#'getName' *#-__booleanFlow+#$true+#%false.+#*__makeList##run'!+#%false+#%ok__79-'"/>'!;+#%ok__8   9.+#+__equalizer#(sameEver'"+#$verb*#+failureList.+#*__makeList##run'!9.+#+__equalizer#(sameEver'".+#)arguments#$size' *&"+#$true+#%false.+#*__makeList##run'!+#%false+#%ok__8-'"/;+#$node  .+#)arguments##get'!*& 9-'"/>'!;+#%ok__9   9.+#+__equalizer#(sameEver'".+#$node#+getNodeName' *#+LiteralExpr.+#*__makeList##run'!9.+#+__equalizer#(sameEver'".+#$node#(getValue' *& +#$true+#%false.+#*__makeList##run'!+#%false+#%ok__9.+#(__return##run'!.+#!a#.MethodCallExpr'$.+#!a#(NounExpr'"*#*__makeList+#$span*##run.+#*__makeList##run'!.+#!a#(NounExpr'"*#%false+#$span+#$span    .+#(__return##run'!.+#!M#$call'#+#%maker*##run.+#$args##add'!.+#*__makeList##run'!+#$span+#$null  ' 1#ULift method calls through branches of if expressions.;+#,liftMethodIf '! 2 '!3 ##run'$;+##ast ;+#%maker ;+#$args ;+#$span  0;+#(__return -'"-'"0;+#'failure 9.+#+__equalizer#(sameEver'".+##ast#+getNodeName' *#&IfExpr-'#/?+#*__suchThat>'";+#$cons ?.+#*__suchThat##run'!..+#+__equalizer#(sameEver'"+#$cons+#$null##not' <  +#'failure.+##ast#'getThen' /?+#*__suchThat>'";+##alt ?.+#*__suchThat##run'!..+#+__equalizer#(sameEver'"+##alt+#$null##not' <  +#'failure.+##ast#'getElse' 9-'"/>'!;+#&ok__10   9.+#+__equalizer#(sameEver'".+#$cons#+getNodeName' *#.MethodCallExpr.+#*__makeList##run'!9.+#+__equalizer#(sameEver'".+##alt#+getNodeName' *#.MethodCallExpr+#$true+#%false.+#*__makeList##run'!+#%false+#&ok__10-'#/;+#,consReceiver  .+#$cons#+getReceiver' /;+#+altReceiver  .+##alt#+getReceiver' 9..+#+__equalizer#(sameEver'".+#,consReceiver#+getNodeName' *#(NounExpr##and'!-'"/>'!;+#&ok__11   9.+#+__equalizer#(sameEver'".+#+altReceiver#+getNodeName' *#(NounExpr.+#*__makeList##run'!9.+#+__equalizer#(sameEver'".+#,consReceiver#'getName' .+#+altReceiver#'getName' +#$true+#%false.+#*__makeList##run'!+#%false+#&ok__119.+#+__equalizer#(sameEver'".+#$cons#'getVerb' .+##alt#'getVerb' -'#/;+#(consArgs  .+#$cons#'getArgs' /;+#'altArgs  .+##alt#'getArgs' 9-'"/>'!;+#&ok__12   9.+#+__equalizer#(sameEver'".+#(consArgs#$size' *&".+#*__makeList##run'!9.+#+__equalizer#(sameEver'".+#'altArgs#$size' *&"+#$true+#%false.+#*__makeList##run'!+#%false+#&ok__12.+#(__return##run'!.+#!a#.MethodCallExpr'$+#,consReceiver.+#$cons#'getVerb' .+#*__makeList##run'!.+#%maker##run'$.+##ast#'getTest' .+#(consArgs##get'!*& .+#'altArgs##get'!*& +#$span+#$span       .+#(__return##run'!.+#!M#$call'#+#%maker*##run.+#$args##add'!.+#*__makeList##run'!+#$span+#$null  ' 1#EPropagate forward simple definitions.;+#3propagateSimpleDefs '! 2 '!3 ##run'$;+##ast ;+#%maker ;+#$args ;+#$span  0;+#(__return -'"-'"9.+#+__equalizer#(sameEver'".+##ast#+getNodeName' *#'SeqExpr-'$/=+#'nameMap  ..+#*__makeList##run' #%asMap' /=+#(newExprs  .+#*__makeList##run' -'#/=+#-validFlag__13  +#$true6.+#&__loop##run'".+#$args##get'!*& 1#-For-loop body< '! 2 '!3 ##run'";+#'key__14 ;+#)value__15  -'".+#-__validateFor##run'!+#-validFlag__130;+#*__continue -'#/=+#$expr  +#)value__15-'#-'#/=+#-validFlag__16  +#$true6.+#&__loop##run'"+#'nameMap1#-For-loop body< '! 2 '!3 ##run'";+#'key__17 ;+#)value__18  -'".+#-__validateFor##run'!+#-validFlag__16-'$/;+#$name  +#'key__17/;+##rhs  +#)value__185+#$expr.+#$expr#)transform'!.+#*specialize##run'"+#$name+##rhs+#$null' 5+#-validFlag__16+#%false+#$null9.+#+__equalizer#(sameEver'".+#$expr#+getNodeName' *#'DefExpr-'"/;+#'pattern  .+#$expr#*getPattern' 9-'"/>'!;+#&ok__19   9.+#+__equalizer#(sameEver'".+#'pattern#+getNodeName' *#,FinalPattern.+#*__makeList##run'!9.+#+__equalizer#(sameEver'".+#'pattern#(getGuard' +#$null+#$true+#%false.+#*__makeList##run'!+#%false+#&ok__19-'#/;+#$name  ..+#'pattern#'getNoun' #'getName' /;+##rhs  .+#$expr#'getExpr' 9.+#+__equalizer#(sameEver'".+##rhs#+getNodeName' *#+LiteralExpr-'"5+#'nameMap.+#'nameMap#$with'"+#$name+##rhs.+#*__continue##run'    5+#(newExprs.+#(newExprs#$with'!+#$expr+#$null  ' 5+#-validFlag__13+#%false+#$null.+#(__return##run'!.+#%maker##run'"+#(newExprs+#$span .+#(__return##run'!.+#!M#$call'#+#%maker*##run.+#$args##add'!.+#*__makeList##run'!+#$span+#$null  ' 1#CRemove definitions that do nothing.;+#0removeIgnoreDefs '! 2 '!3 ##run'$;+##ast ;+#%maker ;+#$args ;+#$span  0;+#(__return -'"-'"9.+#+__equalizer#(sameEver'".+##ast#+getNodeName' *#'DefExpr-'"/;+#'pattern  .+##ast#*getPattern' 9.+#+__equalizer#(sameEver'".+#'pattern#+getNodeName' *#-IgnorePattern9.+#+__equalizer#(sameEver'".+#'pattern#(getGuard' +#$null.+#(__return##run'!..+##ast#'getExpr' #)transform'!+#0removeIgnoreDefs   .+#(__return##run'!.+#!M#$call'#+#%maker*##run.+#$args##add'!.+#*__makeList##run'!+#$span+#$null  ' 1#NRemove unreachable code in escape expressions.;+#-narrowEscapes '! 2 '!3 ##run'$;+##ast ;+#%maker ;+#$args ;+#$span  0;+#(__return -'"-'"9.+#+__equalizer#(sameEver'".+##ast#+getNodeName' *#*EscapeExpr-'"/;+#'pattern  .+##ast#1getEjectorPattern' 0;+#/nonFinalPattern -'#/?+#2finalPatternToName;+#$name +#/nonFinalPattern+#'pattern/;+#$node  .+##ast#'getBody' 9.+#+__equalizer#(sameEver'".+#$node#+getNodeName' *#'SeqExpr-'#/=+#*slicePoint  *&!0;+#'__break -'#/=+#-validFlag__20  +#$true6.+#&__loop##run'".+#$node#(getExprs' 1#-For-loop body< '! 2 '!3 ##run'";+#'key__21 ;+#)value__22  -'".+#-__validateFor##run'!+#-validFlag__20-'$/;+#!i  +#'key__21/;+#$expr  +#)value__229.+#+__equalizer#(sameEver'".+#$expr#+getNodeName' *#.MethodCallExpr-'"/;+#(receiver  .+#$expr#+getReceiver' 9-'"/>'!;+#&ok__23   9.+#+__equalizer#(sameEver'".+#(receiver#+getNodeName' *#(NounExpr.+#*__makeList##run'!9.+#+__equalizer#(sameEver'".+#(receiver#'getName' +#$name+#$true+#%false.+#*__makeList##run'!+#%false+#&ok__23-'"5+#*slicePoint.+#!i##add'!*&".+#'__break##run'   +#$null' 5+#-validFlag__20+#%false+#$null  9..+#+__equalizer#(sameEver'"+#*slicePoint*&!##not' -'#/;+#%exprs  -'"/=+#-validFlag__24  +#$true6.+#0__accumulateList##run'"..+#$node#(getExprs' #%slice'"*& +#*slicePoint1#-For-loop body< '! 2 '!3 ##run'#;+#'key__25 ;+#)value__26 ;+#(skip__27  -'#.+#-__validateFor##run'!+#-validFlag__24/;+#!n  +#)value__26.+#!n#)transform'!+#-narrowEscapes' 5+#-validFlag__24+#%false/;+#&newSeq  .+#(sequence##run'"+#%exprs.+#$node#'getSpan' .+#(__return##run'!.+#%maker##run'%.+#$args##get'!*& +#&newSeq.+#$args##get'!*&$.+#$args##get'!*&&+#$span     .+#(__return##run'!.+#!M#$call'#+#%maker*##run.+#$args##add'!.+#*__makeList##run'!+#$span+#$null  ' 1#]Remove escape clauses that are definitely immediately called.;+#2removeSmallEscapes '! 2 '!3 ##run'$;+##ast ;+#%maker ;+#$args ;+#$span  0;+#(__return -'"-'"9.+#+__equalizer#(sameEver'".+##ast#+getNodeName' *#*EscapeExpr-'"/;+#'pattern  .+##ast#1getEjectorPattern' 0;+#/nonFinalPattern -'#/?+#2finalPatternToName;+#$name +#/nonFinalPattern+#'pattern/;+#$expr  .+##ast#'getBody' 9.+#+__equalizer#(sameEver'".+#$expr#+getNodeName' *#.MethodCallExpr-'"/;+#(receiver  .+#$expr#+getReceiver' 9-'"/>'!;+#&ok__28   9.+#+__equalizer#(sameEver'".+#(receiver#+getNodeName' *#(NounExpr.+#*__makeList##run'!9.+#+__equalizer#(sameEver'".+#(receiver#'getName' +#$name+#$true+#%false.+#*__makeList##run'!+#%false+#&ok__289.+#+__equalizer#(sameEver'".+##ast#/getCatchPattern' +#$null-'"/;+#$args  .+#$expr#'getArgs' 9.+#+__equalizer#(sameEver'".+#$args#$size' *&".+#(__return##run'!..+#$args##get'!*& #)transform'!+#2removeSmallEscapes       .+#(__return##run'!.+#!M#$call'#+#%maker*##run.+#$args##add'!.+#*__makeList##run'!+#$span+#$null  ' 1#=Remove unused escape clauses.;+#3removeUnusedEscapes '! 2 '!3 ##run'$;+##ast ;+#%maker ;+#$args ;+#$span  0;+#(__return -'"-'"9.+#+__equalizer#(sameEver'".+##ast#+getNodeName' *#*EscapeExpr-'#/;+#'pattern  .+##ast#1getEjectorPattern' /;+#$node  .+##ast#'getBody' 9-'"/>'!;+#&ok__29   9.+#+__equalizer#(sameEver'".+#'pattern#+getNodeName' *#,FinalPattern.+#*__makeList##run'!9.+#+__equalizer#(sameEver'".+#'pattern#(getGuard' +#$null+#$true+#%false.+#*__makeList##run'!+#%false+#&ok__29-'#/;+#$name  ..+#'pattern#'getNoun' #'getName' /;+#%scope  .+#$node#.getStaticScope' 9...+#%scope#)namesUsed' #(contains'!+#$name##not' .+#(__return##run'!.+#$node#)transform'!+#3removeUnusedEscapes   .+#(__return##run'!.+#!M#$call'#+#%maker*##run.+#$args##add'!.+#*__makeList##run'!+#$span+#$null  ' 1#HRemove unused bare nouns from sequences.;+#5removeUnusedBareNouns '! 2 '!3 ##run'$;+##ast ;+#%maker ;+#$args ;+#$span  0;+#(__return -'"-'"9-'"/>'!;+#&ok__30   9.+#+__equalizer#(sameEver'".+##ast#+getNodeName' *#'SeqExpr.+#*__makeList##run'!9.+#*__comparer#+greaterThan'"..+#$args##get'!*& #$size' *& +#$true+#%false.+#*__makeList##run'!+#%false+#&ok__30-'&/;+#%exprs  .+#$args##get'!*& /;+#$last  .+#%exprs#$last' /;+#(newExprs  ..+#*__makeList##run' #'diverge' -'#/=+#-validFlag__31  +#$true6.+#&__loop##run'".+#%exprs#%slice'"*& ..+#%exprs#$size' #(subtract'!*&"1#-For-loop body< '! 2 '!3 ##run'";+#'key__32 ;+#)value__33  -'".+#-__validateFor##run'!+#-validFlag__31-'#/;+#$expr  +#)value__339..+#+__equalizer#(sameEver'".+#$expr#+getNodeName' *#(NounExpr##not' .+#(newExprs#$push'!+#$expr +#$null' 5+#-validFlag__31+#%false+#$null.+#(newExprs#$push'!+#$last.+#(__return##run'!.+#%maker##run'".+#(newExprs#(snapshot' +#$span .+#(__return##run'!.+#!M#$call'#+#%maker*##run.+#$args##add'!.+#*__makeList##run'!+#$span+#$null  ' 1 ;+#9testRemoveUnusedBareNouns '! 2 '!3 ##run'!;+#&assert  -'"-'#/;+##ast  .+#!a#'SeqExpr'".+#*__makeList##run'".+#!a#(NounExpr'"*#!x+#$null.+#!a#(NounExpr'"*#!y+#$null+#$null/;+#&result  .+#!a#'SeqExpr'".+#*__makeList##run'!.+#!a#(NounExpr'"*#!y+#$null+#$null.+#&assert#%equal'".+##ast#)transform'!+#5removeUnusedBareNouns+#&result+#$null' .+#(unittest##run'!.+#*__makeList##run'!+#9testRemoveUnusedBareNouns1#VReturn whether every specimen satisfies the predicate.;+#*allSatisfy '! 2 '!3 ##run'";+#$pred ;+#)specimens +#$Bool0;+#(__return -'"-'"-'#/=+#-validFlag__34  +#$true6.+#&__loop##run'"+#)specimens1#-For-loop body< '! 2 '!3 ##run'";+#'key__35 ;+#)value__36  -'".+#-__validateFor##run'!+#-validFlag__34-'#/;+#(specimen  +#)value__369..+#$pred##run'!+#(specimen##not' .+#(__return##run'!+#%false +#$null' 5+#-validFlag__34+#%false+#$null.+#(__return##run'!+#$true+#$null  ' 1 ;+##map '! 2 '!3 ##run'";+#!f ;+#"xs  0;+#(__return -'"-'#/;+#"rv  ..+#*__makeList##run' #'diverge' -'#/=+#-validFlag__37  +#$true6.+#&__loop##run'"+#"xs1#-For-loop body< '! 2 '!3 ##run'";+#'key__38 ;+#)value__39  -'".+#-__validateFor##run'!+#-validFlag__37-'#/;+#!x  +#)value__39.+#"rv#$push'!.+#!f##run'!+#!x+#$null' 5+#-validFlag__37+#%false+#$null.+#(__return##run'!.+#"rv#(snapshot' +#$null  ' 1#WCoalesce modular exponentation from two calls into one.;+#&modPow '! 2 '!3 ##run'$;+##ast ;+#%maker ;+#$args ;+#$span  0;+#(__return -'"-'"0;+#(badMatch 9-'"/>'!;+#&ok__40   9.+#+__equalizer#(sameEver'".+##ast#+getNodeName' *#.MethodCallExpr.+#*__makeList##run'!9.+#+__equalizer#(sameEver'".+##ast#'getVerb' *##mod+#$true+#%false.+#*__makeList##run'!+#%false+#&ok__40-'#/>'!;+#!m  +#(badMatch.+##ast#'getArgs' /;+##pow  .+##ast#+getReceiver' 9-'"/>'!;+#&ok__41   9.+#+__equalizer#(sameEver'".+##pow#+getNodeName' *#.MethodCallExpr.+#*__makeList##run'!9.+#+__equalizer#(sameEver'".+##pow#'getVerb' *##pow+#$true+#%false.+#*__makeList##run'!+#%false+#&ok__41-'"/>'!;+#!e  +#(badMatch.+##pow#'getArgs' .+#(__return##run'!.+#!a#.MethodCallExpr'$.+##pow#+getReceiver' *#&modPow.+#*__makeList##run'"+#!e+#!m+#$span    .+#(__return##run'!.+#!M#$call'#+#%maker*##run.+#$args##add'!.+#*__makeList##run'!+#$span+#$null  ' 1 ;+#*testModPow '! 2 '!3 ##run'!;+#&assert  -'"-'#/;+##ast  .+#!a#.MethodCallExpr'$.+#!a#.MethodCallExpr'$.+#!a#+LiteralExpr'"*&.+#$null*##pow.+#*__makeList##run'!.+#!a#+LiteralExpr'"*&6+#$null+#$null*##mod.+#*__makeList##run'!.+#!a#+LiteralExpr'"*&:+#$null+#$null/;+#&result  .+#!a#.MethodCallExpr'$.+#!a#+LiteralExpr'"*&.+#$null*#&modPow.+#*__makeList##run'".+#!a#+LiteralExpr'"*&6+#$null.+#!a#+LiteralExpr'"*&:+#$null+#$null.+#&assert#%equal'".+##ast#)transform'!+#&modPow+#&result+#$null' .+#(unittest##run'!.+#*__makeList##run'!+#*testModPow1#WConstant-fold calls to literals with literal arguments.;+#4constantFoldLiterals '! 2 '!3 ##run'$;+##ast ;+#%maker ;+#$args ;+#$span  0;+#(__return -'"-'"9.+#+__equalizer#(sameEver'".+##ast#+getNodeName' *#.MethodCallExpr-'#/;+#(receiver  .+##ast#+getReceiver' /;+#(argNodes  .+##ast#'getArgs' 9-'"/>'!;+#&ok__42   9.+#+__equalizer#(sameEver'".+#(receiver#+getNodeName' *#+LiteralExpr.+#*__makeList##run'!9.+#*allSatisfy##run'"1 < '! 2 '!3 ##run'!;+#!x  .+#+__equalizer#(sameEver'".+#!x#+getNodeName' *#+LiteralExpr' +#(argNodes+#$true+#%false.+#*__makeList##run'!+#%false+#&ok__42-'%/;+#-receiverValue  .+#(receiver#(getValue' /;+#$verb  .+##ast#'getVerb' /;+#)argValues  .+##map##run'"1 < '! 2 '!3 ##run'!;+#!x  .+#!x#(getValue' ' +#(argNodes/;+#(constant  .+#!M#$call'#+#-receiverValue+#$verb+#)argValues.+#(__return##run'!.+#!a#+LiteralExpr'"+#(constant+#$span  .+#(__return##run'!.+#!M#$call'#+#%maker*##run.+#$args##add'!.+#*__makeList##run'!+#$span+#$null  ' /;+#-optimizations  .+#*__makeList##run'*+#2replaceBooleanFlow+#,liftMethodIf+#-narrowEscapes+#2removeSmallEscapes+#&modPow+#3propagateSimpleDefs+#0removeIgnoreDefs+#3removeUnusedEscapes+#5removeUnusedBareNouns+#4constantFoldLiterals1 ;+#(optimize '! 2 '!3 ##run'!=+##ast  0;+#(__return -'"-'"-'#/=+#-validFlag__43  +#$true6.+#&__loop##run'"+#-optimizations1#-For-loop body< '! 2 '!3 ##run'";+#'key__44 ;+#)value__45  -'".+#-__validateFor##run'!+#-validFlag__43-'#/;+#,optimization  +#)value__455+##ast.+##ast#)transform'!+#,optimization+#$null' 5+#-validFlag__43+#%false+#$null.+#(__return##run'!+##ast+#$null  ' .+#)__makeMap#)fromPairs'!.+#*__makeList##run'!.+#*__makeList##run'"*#(optimize+#(optimize