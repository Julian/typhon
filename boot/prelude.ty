-'d1#kA comparison helper.

     This object implements the comparison operators.;+#*__comparer '!+#/DeepFrozenStamp2 '%3#å!The operator `left` <=> `right`.
        
         Whether `left` and `right` have the same magnitude; to be precise,
         this method returns whether `left` â‰¤ `right` âˆ§ `right` â‰¤ `left`.#'asBigAs'";+#$left ;+#%right  0;+#(__return -'".+#(__return##run'!..+#$left#'op__cmp'!+#%right#&isZero' +#$null  3#mThe operator `left` >= `right`.
        
         Whether `left` â‰¥ `right`.##geq'";+#$left ;+#%right  0;+#(__return -'".+#(__return##run'!..+#$left#'op__cmp'!+#%right#+atLeastZero' +#$null  3#jThe operator `left` > `right`.
        
         Whether `left` > `right`.#+greaterThan'";+#$left ;+#%right  0;+#(__return -'".+#(__return##run'!..+#$left#'op__cmp'!+#%right#)aboveZero' +#$null  3#mThe operator `left` <= `right`.
        
         Whether `left` â‰¤ `right`.##leq'";+#$left ;+#%right  0;+#(__return -'".+#(__return##run'!..+#$left#'op__cmp'!+#%right#*atMostZero' +#$null  3#jThe operator `left` < `right`.
        
         Whether `left` < `right`.#(lessThan'";+#$left ;+#%right  0;+#(__return -'".+#(__return##run'!..+#$left#'op__cmp'!+#%right#)belowZero' +#$null  ' 1#QNothingness.

     This guard admits only `null`.;+#$Void '!+#/DeepFrozenStamp2 '!3 #&coerce'";+#(specimen ;+#"ej  0;+#(__return -'"-'"9..+#+__equalizer#(sameEver'"+#(specimen+#$null##not' .+#%throw#%eject'"+#"ej*#(not null .+#(__return##run'!+#$null+#$null  ' 1 ;+#2makePredicateGuard '!+#/DeepFrozenStamp2 '!3 ##run'";+#)predicate+#/DeepFrozenStamp;+#%label  0;+#(__return -'"-'"9..+#%isStr##run'!+#%label##not' .+#%throw##run'!*#DPredicate guard label must be string .+#(__return##run'!1#uA predicate guard.

         This guard admits any object which passes its predicate.;+#.predicateGuard '!+#/DeepFrozenStamp2 '"3 #(_printOn'!;+##out  0;+#(__return -'".+##out#%print'!+#%label+#$null  3 #&coerce'";+#(specimen ;+#"ej  0;+#(__return -'"-'%9.+#)predicate##run'!+#(specimen.+#(__return##run'!+#(specimen /;+#)conformed  .+#(specimen#*_conformTo'!+#.predicateGuard9.+#)predicate##run'!+#)conformed.+#(__return##run'!+#)conformed /;+#%error  ..*#.Failed guard (##add'!+#%label##add'!*#"):.+#%throw#%eject'"+#"ej.+#*__makeList##run'"+#%error+#(specimen+#$null  ' +#$null  ' /;+#$Bool  .+#2makePredicateGuard##run'"+#&isBool*#$Bool/;+#%Bytes  .+#2makePredicateGuard##run'"+#'isBytes*#%Bytes/;+#$Char  .+#2makePredicateGuard##run'"+#&isChar*#$Char/;+#&Double  .+#2makePredicateGuard##run'"+#(isDouble*#&Double/;+##Int  .+#2makePredicateGuard##run'"+#%isInt*##Int/;+##Str  .+#2makePredicateGuard##run'"+#%isStr*##Str/;+#%Empty  .+#2makePredicateGuard##run'"1 ;+#$pred '!+#/DeepFrozenStamp2 '!3 ##run'!;+#(specimen  0;+#(__return -'".+#(__return##run'!.+#+__equalizer#(sameEver'".+#(specimen#$size' *& +#$null  ' *#%Empty/;+#*__mapEmpty  +#%Empty1 ;+#,testIntGuard '! 2 '!3 ##run'!;+#&assert  0;+#(__return -'"-'".+#&assert#&ejects'!1 < '! 2 '!3 ##run'!;+#"ej  /;+#!x+##Int+#"ej*$`4      ' .+#&assert#,doesNotEject'!1 < '! 2 '!3 ##run'!;+#"ej  /;+#!x+##Int+#"ej*&t' +#$null  ' 1 ;+#.testEmptyGuard '! 2 '!3 ##run'!;+#&assert  0;+#(__return -'"-'".+#&assert#&ejects'!1 < '! 2 '!3 ##run'!;+#"ej  /;+#!x+#%Empty+#"ej.+#*__makeList##run'!*&.' .+#&assert#,doesNotEject'!1 < '! 2 '!3 ##run'!;+#"ej  /;+#!x+#%Empty+#"ej.+#*__makeList##run' ' +#$null  ' .+#(unittest##run'!.+#*__makeList##run'"+#,testIntGuard+#.testEmptyGuard1#!Ensure that `flag` is `true`.

     This object is a safeguard against malicious loop objects. A flag is set
     to `true` and closed over by a loop body; once the loop is finished, the
     flag is set to `false` and the loop cannot be reÃ«ntered.;+#-__validateFor '!+#/DeepFrozenStamp2 '!3 ##run'!;+#$flag+#$Bool+#$Void0;+#(__return -'"9.+#$flag##not' .+#%throw##run'!*#8Failed to validate loop! +#$null  ' 1 ;+#/_ListGuardStamp '! 2 '!3 #%audit'!;+#(audition  0;+#(__return -'".+#(__return##run'!+#$true+#$null  ' 1#ß!A guard which admits lists.

     Only immutable lists are admitted by this object. Mutable lists created
     with `diverge/0` will not be admitted; freeze them first with
     `snapshot/0`.;+#$List '!+#/DeepFrozenStamp2 '$3 #(_printOn'!;+##out  0;+#(__return -'".+##out#%print'!*#$List+#$null  3 #&coerce'";+#(specimen ;+#"ej  0;+#(__return -'"-'$9.+#&isList##run'!+#(specimen.+#(__return##run'!+#(specimen /;+#)conformed  .+#(specimen#*_conformTo'!+#$List9.+#&isList##run'!+#)conformed.+#(__return##run'!+#)conformed .+#%throw#%eject'"+#"ej.+#*__makeList##run'"*#6(Probably) not a list:+#(specimen+#$null  3 ##get'!;+#(subGuard  0;+#(__return -'".+#(__return##run'!1 ;+#'SubList '" +#/_ListGuardStamp2 '#3 #(_printOn'!;+##out  0;+#(__return -'"-'#.+##out#%print'!*#%List[.+#(subGuard#(_printOn'!+##out.+##out#%print'!*#!]+#$null  3 #(getGuard'  0;+#(__return -'".+#(__return##run'!+#(subGuard+#$null  3 #&coerce'"=+#(specimen ;+#"ej  0;+#(__return -'"-'#9..+#&isList##run'!+#(specimen##not' 5+#(specimen.+#(specimen#*_conformTo'!+#'SubList 9.+#&isList##run'!+#(specimen-'"0;+#'__break -'#/=+#,validFlag__1  +#$true6.+#&__loop##run'"+#(specimen1#-For-loop body< '! 2 '!3 ##run'";+#&key__2 ;+#(value__3  -'".+#-__validateFor##run'!+#,validFlag__10;+#*__continue -'$/<  +#&key__2/;+#'element  +#(value__3.+#(subGuard#&coerce'"+#'element+#"ej+#$null  ' 5+#,validFlag__1+#%false+#$null  .+#(__return##run'!+#(specimen .+#%throw#%eject'"+#"ej.+#*__makeList##run'"*#A(Probably) not a conforming list:+#(specimen+#$null  ' +#$null  3 #,extractGuard'";+#(specimen ;+#"ej  0;+#(__return -'"9.+#+__equalizer#(sameEver'"+#(specimen+#$List.+#(__return##run'!+##Any9.+#+__auditedBy##run'"+#/_ListGuardStamp+#(specimen.+#(__return##run'!.+#(specimen#(getGuard' .+#%throw#%eject'"+#"ej*#0Not a List guard+#$null  ' 1 ;+#._SetGuardStamp '! 2 '!3 #%audit'!;+#(audition  0;+#(__return -'".+#(__return##run'!+#$true+#$null  ' 1#Ü!A guard which admits sets.

     Only immutable sets are admitted by this object. Mutable sets created
     with `diverge/0` will not be admitted; freeze them first with
     `snapshot/0`.;+##Set '!+#/DeepFrozenStamp2 '$3 #(_printOn'!;+##out  0;+#(__return -'".+##out#%print'!*##Set+#$null  3 #&coerce'";+#(specimen ;+#"ej  0;+#(__return -'"-'$9.+#%isSet##run'!+#(specimen.+#(__return##run'!+#(specimen /;+#)conformed  .+#(specimen#*_conformTo'!+##Set9.+#%isSet##run'!+#)conformed.+#(__return##run'!+#)conformed .+#%throw#%eject'"+#"ej.+#*__makeList##run'"*#5(Probably) not a set:+#(specimen+#$null  3 ##get'!;+#(subGuard  0;+#(__return -'".+#(__return##run'!1 ;+#&SubSet '" +#._SetGuardStamp2 '#3 #(_printOn'!;+##out  0;+#(__return -'"-'#.+##out#%print'!*#$Set[.+#(subGuard#(_printOn'!+##out.+##out#%print'!*#!]+#$null  3 #(getGuard'  0;+#(__return -'".+#(__return##run'!+#(subGuard+#$null  3 #&coerce'"=+#(specimen ;+#"ej  0;+#(__return -'"-'%9..+#%isSet##run'!+#(specimen##not' 5+#(specimen.+#(specimen#*_conformTo'!+#&SubSet /=+##set  ..+#*__makeList##run' #%asSet' 0;+#'__break -'#/=+#,validFlag__4  +#$true6.+#&__loop##run'"+#(specimen1#-For-loop body< '! 2 '!3 ##run'";+#&key__5 ;+#(value__6  -'".+#-__validateFor##run'!+#,validFlag__40;+#*__continue -'$/<  +#&key__5/;+#'element  +#(value__65+##set.+##set#$with'!.+#(subGuard#&coerce'"+#'element+#"ej+#$null  ' 5+#,validFlag__4+#%false+#$null  .+#(__return##run'!+##set.+#%throw#%eject'"+#"ej.+#*__makeList##run'"*#@(Probably) not a conforming set:+#(specimen+#$null  ' +#$null  3 #,extractGuard'";+#(specimen ;+#"ej  0;+#(__return -'"9.+#+__equalizer#(sameEver'"+#(specimen+##Set.+#(__return##run'!+##Any9.+#+__auditedBy##run'"+#._SetGuardStamp+#(specimen.+#(__return##run'!.+#(specimen#(getGuard' .+#%throw#%eject'"+#"ej*#/Not a Set guard+#$null  ' 1 ;+#._MapGuardStamp '! 2 '!3 #%audit'!;+#(audition  0;+#(__return -'".+#(__return##run'!+#$true+#$null  ' 1#Ü!A guard which admits maps.

     Only immutable maps are admitted by this object. Mutable maps created
     with `diverge/0` will not be admitted; freeze them first with
     `snapshot/0`.;+##Map '!+#/DeepFrozenStamp2 '$3 #(_printOn'!;+##out  0;+#(__return -'".+##out#%print'!*##Map+#$null  3 #&coerce'";+#(specimen ;+#"ej  0;+#(__return -'"-'$9.+#%isMap##run'!+#(specimen.+#(__return##run'!+#(specimen /;+#)conformed  .+#(specimen#*_conformTo'!+##Map9.+#%isMap##run'!+#)conformed.+#(__return##run'!+#)conformed .+#%throw#%eject'"+#"ej.+#*__makeList##run'"*#5(Probably) not a map:+#(specimen+#$null  3 ##get'";+#(keyGuard ;+#*valueGuard  0;+#(__return -'".+#(__return##run'!1 ;+#&SubMap '" +#._MapGuardStamp2 '#3 #(_printOn'!;+##out  0;+#(__return -'"-'%.+##out#%print'!*#$Map[.+#(keyGuard#(_printOn'!+##out.+##out#%print'!*#", .+#*valueGuard#(_printOn'!+##out.+##out#%print'!*#!]+#$null  3 #(getGuard'  0;+#(__return -'".+#(__return##run'!.+#*__makeList##run'"+#(keyGuard+#*valueGuard+#$null  3 #&coerce'"=+#(specimen ;+#"ej  0;+#(__return -'"-'#9..+#%isMap##run'!+#(specimen##not' 5+#(specimen.+#(specimen#*_conformTo'!+#&SubMap 9.+#%isMap##run'!+#(specimen-'"0;+#'__break -'#/=+#,validFlag__7  +#$true6.+#&__loop##run'"+#(specimen1#-For-loop body< '! 2 '!3 ##run'";+#&key__8 ;+#(value__9  -'".+#-__validateFor##run'!+#,validFlag__70;+#*__continue -'$/;+##key  +#&key__8/;+#%value  +#(value__9-'".+#(keyGuard#&coerce'"+##key+#"ej.+#*valueGuard#&coerce'"+#%value+#"ej+#$null  ' 5+#,validFlag__7+#%false+#$null  .+#(__return##run'!+#(specimen .+#%throw#%eject'"+#"ej.+#*__makeList##run'"*#@(Probably) not a conforming map:+#(specimen+#$null  ' +#$null  3 #,extractGuard'";+#(specimen ;+#"ej  0;+#(__return -'"9.+#+__equalizer#(sameEver'"+#(specimen+##Map.+#(__return##run'!+##Any9.+#+__auditedBy##run'"+#._MapGuardStamp+#(specimen.+#(__return##run'!.+#(specimen#(getGuard' .+#%throw#%eject'"+#"ej*#/Not a Map guard+#$null  ' 1 ;+#,testMapGuard '! 2 '!3 ##run'!;+#&assert  0;+#(__return -'"-'".+#&assert#&ejects'!1 < '! 2 '!3 ##run'!;+#"ej  /;+#!x+##Map+#"ej*&t' .+#&assert#,doesNotEject'!1 < '! 2 '!3 ##run'!;+#"ej  /;+#!x+##Map+#"ej..+#*__makeList##run' #%asMap' ' +#$null  ' 1 ;+#2testMapGuardIntStr '! 2 '!3 ##run'!;+#&assert  0;+#(__return -'"-'".+#&assert#&ejects'!1 < '! 2 '!3 ##run'!;+#"ej  /;+#!x.+##Map##get'"+##Int+##Str+#"ej.+#)__makeMap#)fromPairs'!.+#*__makeList##run'!.+#*__makeList##run'"*##lue*&t' .+#&assert#,doesNotEject'!1 < '! 2 '!3 ##run'!;+#"ej  /;+#!x.+##Map##get'"+##Int+##Str+#"ej.+#)__makeMap#)fromPairs'!.+#*__makeList##run'!.+#*__makeList##run'"*&t*##lue' +#$null  ' .+#(unittest##run'!.+#*__makeList##run'"+#,testMapGuard+#2testMapGuardIntStr1 ;+#,_NullOkStamp '! 2 '!3 #%audit'!;+#(audition  0;+#(__return -'".+#(__return##run'!+#$true+#$null  ' 1#¢!A guard which admits `null`.

     When specialized, this object returns a guard which admits its subguard
     as well as `null`.;+#&NullOk '!+#/DeepFrozenStamp2 '#3 #&coerce'";+#(specimen ;+#"ej  0;+#(__return -'"-'$9.+#+__equalizer#(sameEver'"+#(specimen+#$null.+#(__return##run'!+#(specimen /;+#)conformed  .+#(specimen#*_conformTo'!+#&NullOk9.+#+__equalizer#(sameEver'"+#)conformed+#$null.+#(__return##run'!+#)conformed .+#%throw#%eject'"+#"ej.+#*__makeList##run'"*#)Not null:+#(specimen+#$null  3 ##get'!;+#(subGuard  0;+#(__return -'".+#(__return##run'!1 ;+#)SubNullOk '" +#,_NullOkStamp2 '#3 #(_printOn'!;+##out  0;+#(__return -'"-'#.+##out#%print'!*#'NullOk[.+##out#%print'!+#(subGuard.+##out#%print'!*#!]+#$null  3 #&coerce'";+#(specimen ;+#"ej  0;+#(__return -'"-'"9.+#+__equalizer#(sameEver'"+#(specimen+#$null.+#(__return##run'!+#(specimen .+#(__return##run'!.+#(subGuard#&coerce'"+#(specimen+#"ej+#$null  3 #(getGuard'  0;+#(__return -'".+#(__return##run'!+#(subGuard+#$null  ' +#$null  3 #,extractGuard'";+#(specimen ;+#"ej  0;+#(__return -'"9.+#+__equalizer#(sameEver'"+#(specimen+#&NullOk.+#(__return##run'!+##Any9.+#+__auditedBy##run'"+#,_NullOkStamp+#(specimen.+#(__return##run'!.+#(specimen#(getGuard' .+#%throw#%eject'"+#"ej*#2Not a NullOk guard+#$null  ' 1 ;+#2testNullOkUnsubbed '! 2 '!3 ##run'!;+#&assert  0;+#(__return -'"-'".+#&assert#&ejects'!1 < '! 2 '!3 ##run'!;+#"ej  /;+#!x+#&NullOk+#"ej*&t' .+#&assert#,doesNotEject'!1 < '! 2 '!3 ##run'!;+#"ej  /;+#!x+#&NullOk+#"ej+#$null' +#$null  ' 1 ;+#-testNullOkInt '! 2 '!3 ##run'!;+#&assert  0;+#(__return -'"-'#.+#&assert#&ejects'!1 < '! 2 '!3 ##run'!;+#"ej  /;+#!x.+#&NullOk##get'!+##Int+#"ej*#"42' .+#&assert#,doesNotEject'!1 < '! 2 '!3 ##run'!;+#"ej  /;+#!x.+#&NullOk##get'!+##Int+#"ej*&t' .+#&assert#,doesNotEject'!1 < '! 2 '!3 ##run'!;+#"ej  /;+#!x.+#&NullOk##get'!+##Int+#"ej+#$null' +#$null  ' .+#(unittest##run'!.+#*__makeList##run'"+#2testNullOkUnsubbed+#-testNullOkInt1 ;+#/_SameGuardStamp '! 2 '!3 #%audit'!;+#(audition  0;+#(__return -'".+#(__return##run'!+#$true+#$null  ' 1 ;+#$Same '!+#/DeepFrozenStamp2 '#3 #(_printOn'!;+##out  0;+#(__return -'".+##out#%print'!*#$Same+#$null  3 ##get'!;+#%value  0;+#(__return -'".+#(__return##run'!1 ;+#)SameGuard '" +#/_SameGuardStamp2 '#3 #(_printOn'!;+##out  0;+#(__return -'"-'#.+##out#%print'!*#%Same[.+#%value#(_printOn'!+##out.+##out#%print'!*#!]+#$null  3 #&coerce'";+#(specimen ;+#"ej  0;+#(__return -'"-'"9..+#+__equalizer#'sameYet'"+#%value+#(specimen##not' .+#%throw#%eject'"+#"ej.+#*__makeList##run'#+#(specimen*#&is not+#%value .+#(__return##run'!+#(specimen+#$null  3 #(getValue'  0;+#(__return -'".+#(__return##run'!+#%value+#$null  ' +#$null  3 #,extractValue'";+#(specimen ;+#"ej  0;+#(__return -'"9.+#+__auditedBy##run'"+#/_SameGuardStamp+#(specimen.+#(__return##run'!.+#(specimen#(getValue' .+#%throw#%eject'"+#"ej*#0Not a Same guard+#$null  ' 1 ;+#(testSame '! 2 '!3 ##run'!;+#&assert  0;+#(__return -'"-'%1 ;+#!o '! 2 ' ' 1 ;+#!p '! 2 ' ' .+#&assert#&ejects'!1 < '! 2 '!3 ##run'!;+#"ej  /;+#!x.+#$Same##get'!+#!o+#"ej+#!p' .+#&assert#,doesNotEject'!1 < '! 2 '!3 ##run'!;+#"ej  /;+#!x.+#$Same##get'!+#!o+#"ej+#!o' .+#&assert#%equal'"..+#$Same##get'!+#!o#(getValue' +#!o+#$null  ' .+#(unittest##run'!.+#*__makeList##run'!+#(testSame1 ;+#+__iterWhile '!+#/DeepFrozenStamp2 '!3 ##run'!;+##obj  0;+#(__return -'".+#(__return##run'!1 ;+#)iterWhile '! 2 '"3 #-_makeIterator'  0;+#(__return -'".+#(__return##run'!+#)iterWhile+#$null  3 #$next'!;+#"ej  0;+#(__return -'"-'#/;+#"rv  .+##obj##run' 9.+#+__equalizer#(sameEver'"+#"rv+#%false.+#%throw#%eject'"+#"ej*#0End of iteration .+#(__return##run'!.+#*__makeList##run'"+#$null+#"rv+#$null  ' +#$null  ' 1 ;+#+__splitList '!+#/DeepFrozenStamp2 '!3 ##run'!;+#(position+##Int 0;+#(__return -'".+#(__return##run'!1 ;+#,listSplitter '! 2 '!3 ##run'";+#(specimen ;+#"ej  0;+#(__return -'"-'"9.+#*__comparer#(lessThan'".+#(specimen#$size' +#(position.+#%throw#%eject'"+#"ej.+#*__makeList##run'"*#2List is too short:+#(specimen .+#(__return##run'!..+#(specimen#%slice'"*& +#(position#$with'!.+#(specimen#%slice'!+#(position+#$null  ' +#$null  ' 1 ;+#0__accumulateList '!+#/DeepFrozenStamp2 '!3 ##run'";+#(iterable ;+#&mapper  0;+#(__return -'"-'$/;+#(iterator  .+#(iterable#-_makeIterator' /=+#"rv  .+#*__makeList##run' 0;+#"ej 0;+#'__break .+#&__loop##run'".+#+__iterWhile##run'!1 < '! 2 '!3 ##run'  +#$true' 1 < '! 2 '!3 ##run'"< < +#$Bool-'"0;+#*__continue 0;+#$skip -'#/>'";+##key ;+#%value   .+#(iterator#$next'!+#"ej/;+#&result  .+#&mapper##run'#+##key+#%value+#$skip5+#"rv.+#"rv#$with'!+#&result    +#$true'     .+#(__return##run'!+#"rv+#$null  ' 1#9The pattern ==`expected`.;+#+__matchSame '!+#/DeepFrozenStamp2 '!3 ##run'!;+#(expected  0;+#(__return -'".+#(__return##run'!1 ;+#+sameMatcher '! 2 '!3 ##run'";+#(specimen ;+#"ej  0;+#(__return -'"9..+#+__equalizer#(sameEver'"+#(expected+#(specimen##not' .+#%throw#%eject'"+#"ej.+#*__makeList##run'#*#-Not the same:+#(expected+#(specimen +#$null  ' +#$null  ' 1 ;+#,__mapExtract '!+#/DeepFrozenStamp2 '!3 ##run'!;+##key  0;+#(__return -'".+#(__return##run'!1 ;+#,mapExtractor '! 2 '!3 ##run'";+#(specimen ;+#"ej  0;+#(__return -'"-'"9.+#(specimen#(contains'!+##key.+#(__return##run'!.+#*__makeList##run'".+#(specimen##get'!+##key.+#(specimen#'without'!+##key .+#%throw#%eject'"+#"ej..*#$Key ##add'!.+#!M#'toQuote'!+#(specimen##add'!*#+ not in map+#$null  ' +#$null  ' 1 ;+#.__quasiMatcher '!+#/DeepFrozenStamp2 '!3 ##run'";+#*matchMaker ;+#&values  0;+#(__return -'".+#(__return##run'!1 ;+#,quasiMatcher '! 2 '!3 ##run'";+#(specimen ;+#"ej  0;+#(__return -'".+#(__return##run'!.+#*matchMaker#)matchBind'#+#&values+#(specimen+#"ej+#$null  ' +#$null  ' 1#:The pattern patt ? (expr).;+#*__suchThat '!+#/DeepFrozenStamp2 '"3 ##run'!;+#(specimen+#$Bool 0;+#(__return -'"-'"1 ;+#(suchThat '! 2 '!3 ##run'"< ;+#"ej  0;+#(__return -'"9.+#(specimen##not' .+#%throw#%eject'"+#"ej*#/suchThat failed +#$null  ' .+#(__return##run'!+#(suchThat+#$null  3 ##run'";+#(specimen <  0;+#(__return -'".+#(__return##run'!.+#*__makeList##run'"+#(specimen+#$null+#$null  ' 1 ;+#0testSuchThatTrue '! 2 '!3 ##run'!;+#&assert  0;+#(__return -'"-'"1 ;+#!f '! 2 '!3 ##run'!;+#"ej  0;+#(__return -'"-'"/?+#*__suchThat>'";+#!x ?.+#*__suchThat##run'!+#$true<  +#"ej*&t.+#&assert#%equal'"+#!x*&t+#$null  ' .+#&assert#,doesNotEject'!+#!f+#$null  ' 1 ;+#1testSuchThatFalse '! 2 '!3 ##run'!;+#&assert  0;+#(__return -'".+#&assert#&ejects'!1 < '! 2 '!3 ##run'!;+#"ej  /?+#*__suchThat>'";+#!x ?.+#*__suchThat##run'!+#%false<  +#"ej*&t' +#$null  ' .+#(unittest##run'!.+#*__makeList##run'"+#0testSuchThatTrue+#1testSuchThatFalse1 ;+#/testAnySubGuard '! 2 '!3 ##run'!;+#&assert  0;+#(__return -'"-'#.+#&assert#&ejects'!1 < '! 2 '!3 ##run'!;+#"ej  /;+#!x.+##Any##get'"+##Int+#$Char+#"ej*#$test' .+#&assert#,doesNotEject'!1 < '! 2 '!3 ##run'!;+#"ej  /;+#!x.+##Any##get'"+##Int+#$Char+#"ej*&t' .+#&assert#,doesNotEject'!1 < '! 2 '!3 ##run'!;+#"ej  /;+#!x.+##Any##get'"+##Int+#$Char+#"ej*A#!x' +#$null  ' .+#(unittest##run'!.+#*__makeList##run'!+#/testAnySubGuard1 ;+#.__switchFailed '!+#/DeepFrozenStamp2 ' '!4>'"?.+#+__matchSame##run'!*##run< ;+#$args  .+#%throw##run'"*#.Switch failed:+#$args1#<The operator `obj`.`method`.;+#/__makeVerbFacet '!+#/DeepFrozenStamp2 '!3#FCurry a call to `target` using `verb`.#)curryCall'";+#&target ;+#$verb  0;+#(__return -'".+#(__return##run'!1#¸!A curried call.

             This object responds to messages with the verb "run" by passing
             them to another object with a different verb.;+#'curried '! 2 '!3 #'_uncall'  0;+#(__return -'".+#(__return##run'!.+#*__makeList##run'#+#/__makeVerbFacet*#)curryCall.+#*__makeList##run'"+#&target+#$verb+#$null  '!4>'"?.+#+__matchSame##run'!*##run< ;+#$args  .+#!M#$call'#+#&target+#$verb+#$args+#$null  ' 1 ;+#(_flexMap '! 2 '!3 ##run'!=+#!m  0;+#(__return -'".+#(__return##run'!1 ;+#'flexMap '! 2 '.3 #-_makeIterator'  0;+#(__return -'".+#(__return##run'!.+#!m#-_makeIterator' +#$null  3 #(_printOn'!;+##out  0;+#(__return -'"-'".+##out#%print'!.+#!M#(toString'!+#!m.+##out#%print'!*#*.diverge()+#$null  3 #%asSet' +##Set0;+#(__return -'".+#(__return##run'!.+#!m#%asSet' +#$null  3 #(contains'!;+#!k +#$Bool0;+#(__return -'".+#(__return##run'!.+#!m#(contains'!+#!k+#$null  3 #'diverge'  0;+#(__return -'".+#(__return##run'!.+#(_flexMap##run'!+#!m+#$null  3 #%fetch'";+#!k ;+#%thunk  0;+#(__return -'".+#(__return##run'!.+#!m#%fetch'"+#!k+#%thunk+#$null  3 ##get'!;+#!k  0;+#(__return -'".+#(__return##run'!.+#!m##get'!+#!k+#$null  3 #"or'!;+#%other  0;+#(__return -'".+#(__return##run'!.+#(_flexMap##run'!.+#!m#"or'!+#%other+#$null  3 ##put'";+#!k ;+#!v  0;+#(__return -'"5+#!m.+#!m#$with'"+#!k+#!v+#$null  3 #)removeKey'!;+#!k  0;+#(__return -'"5+#!m.+#!m#'without'!+#!k+#$null  3 #$size'  0;+#(__return -'".+#(__return##run'!.+#!m#$size' +#$null  3 #%slice'!;+#%start  0;+#(__return -'".+#(__return##run'!.+#'flexMap#%slice'"+#%start.+#'flexMap#$size' +#$null  3 #%slice'";+#%start ;+#$stop  0;+#(__return -'".+#(__return##run'!.+#(_flexMap##run'!.+#!m#%slice'"+#%start+#$stop+#$null  3 #(snapshot'  0;+#(__return -'".+#(__return##run'!+#!m+#$null  ' +#$null  ' 1 ;+#3testFlexMapPrinting '! 2 '!3 ##run'!;+#&assert  0;+#(__return -'"-'".+#&assert#%equal'".+#!M#(toString'!.+#(_flexMap##run'!..+#*__makeList##run' #%asMap' *#4[].asMap().diverge().+#&assert#%equal'".+#!M#(toString'!.+#(_flexMap##run'!.+#)__makeMap#)fromPairs'!.+#*__makeList##run'!.+#*__makeList##run'"*&**&t*#3[5 => 42].diverge()+#$null  ' 1 ;+#4testFlexMapRemoveKey '! 2 '!3 ##run'!;+#&assert  0;+#(__return -'"-'#/;+#!m  .+#(_flexMap##run'!.+#)__makeMap#)fromPairs'!.+#*__makeList##run'!.+#*__makeList##run'"*&"*&$.+#!m#)removeKey'!*&".+#&assert#%equal'".+#!m#(contains'!*&"+#%false+#$null  ' .+#(unittest##run'!.+#*__makeList##run'"+#3testFlexMapPrinting+#4testFlexMapRemoveKey1 ;+#)__makeMap '!+#/DeepFrozenStamp2 '!3 #)fromPairs'!;+#!l  0;+#(__return -'"-'#/;+#!m  .+#(_flexMap##run'!..+#*__makeList##run' #%asMap' 0;+#'__break -'#/=+#-validFlag__10  +#$true6.+#&__loop##run'"+#!l1#-For-loop body< '! 2 '!3 ##run'";+#'key__11 ;+#)value__12  -'".+#-__validateFor##run'!+#-validFlag__100;+#*__continue -'$/<  +#'key__11/>'";+#!k ;+#!v   +#)value__12-'".+#!m##put'"+#!k/;+#(ares__13  +#!v+#(ares__13+#$null  ' 5+#-validFlag__10+#%false+#$null  .+#(__return##run'!.+#!m#(snapshot' +#$null  ' 1 ;+#/__accumulateMap '!+#/DeepFrozenStamp2 '!3 ##run'";+#(iterable ;+#&mapper  0;+#(__return -'"-'"/;+#!l  .+#0__accumulateList##run'"+#(iterable+#&mapper.+#(__return##run'!.+#)__makeMap#)fromPairs'!+#!l+#$null  ' 1 ;+#&__bind '!+#/DeepFrozenStamp2 '!3 ##run'";+#(resolver ;+#%guard  0;+#(__return -'"-'"1 ;+#)viaBinder '! 2 '!3 ##run'";+#(specimen ;+#"ej  0;+#(__return -'"9.+#+__equalizer#(sameEver'"+#%guard+#$null-'".+#(resolver#'resolve'!+#(specimen.+#(__return##run'!+#(specimen-'#/;+#'coerced  .+#%guard#&coerce'"+#(specimen+#"ej.+#(resolver#'resolve'!+#'coerced.+#(__return##run'!+#'coerced+#$null  ' .+#(__return##run'!+#)viaBinder+#$null  ' 1 ;+#-__booleanFlow '!+#/DeepFrozenStamp2 '"3 #&broken'  0;+#(__return -'".+#(__return##run'!.+##Ref#&broken'!*#>Boolean flow expression failed+#$null  3 #+failureList'!;+#%count+##Int+#$List0;+#(__return -'".+#(__return##run'!..+#*__makeList##run'!+#%false##add'!..+#*__makeList##run'!.+#-__booleanFlow#&broken' #(multiply'!+#%count+#$null  ' /?.+#,__mapExtract##run'!*#-SubrangeGuard>'";+#-SubrangeGuard ?.+#,__mapExtract##run'!*#*DeepFrozen>'";+#*DeepFrozen <+#*__mapEmpty   .+#&import##run'"*#2prelude/deepfrozen.+#)__makeMap#)fromPairs'!.+#*__makeList##run'2.+#*__makeList##run'"*#*__comparer+#*__comparer.+#*__makeList##run'"*#-__booleanFlow+#-__booleanFlow.+#*__makeList##run'"*#/__makeVerbFacet+#/__makeVerbFacet.+#*__makeList##run'"*#-__validateFor+#-__validateFor.+#*__makeList##run'"*#&__bind+#&__bind.+#*__makeList##run'"*#/DeepFrozenStamp+#/DeepFrozenStamp.+#*__makeList##run'"*#0TransparentStamp+#0TransparentStamp.+#*__makeList##run'"*#$Bool+#$Bool.+#*__makeList##run'"*#$Char+#$Char.+#*__makeList##run'"*#&Double+#&Double.+#*__makeList##run'"*##Int+##Int.+#*__makeList##run'"*##Str+##Str.+#*__makeList##run'"*#$Void+#$Void.+#*__makeList##run'"*#$List+#$List.+#*__makeList##run'"*##Map+##Map.+#*__makeList##run'"*#&NullOk+#&NullOk.+#*__makeList##run'"*#$Same+#$Same.+#*__makeList##run'"*##Set+##Set/=+#,preludeScope  .+#)__makeMap#)fromPairs'!.+#*__makeList##run'C.+#*__makeList##run'"*##Any+##Any.+#*__makeList##run'"*#$Bool+#$Bool.+#*__makeList##run'"*#%Bytes+#%Bytes.+#*__makeList##run'"*#$Char+#$Char.+#*__makeList##run'"*#*DeepFrozen+#*DeepFrozen.+#*__makeList##run'"*#&Double+#&Double.+#*__makeList##run'"*#%Empty+#%Empty.+#*__makeList##run'"*##Int+##Int.+#*__makeList##run'"*#$List+#$List.+#*__makeList##run'"*##Map+##Map.+#*__makeList##run'"*#&NullOk+#&NullOk.+#*__makeList##run'"*#$Same+#$Same.+#*__makeList##run'"*##Set+##Set.+#*__makeList##run'"*##Str+##Str.+#*__makeList##run'"*#-SubrangeGuard+#-SubrangeGuard.+#*__makeList##run'"*#$Void+#$Void.+#*__makeList##run'"*#*__mapEmpty+#*__mapEmpty.+#*__makeList##run'"*#,__mapExtract+#,__mapExtract.+#*__makeList##run'"*#0__accumulateList+#0__accumulateList.+#*__makeList##run'"*#/__accumulateMap+#/__accumulateMap.+#*__makeList##run'"*#-__booleanFlow+#-__booleanFlow.+#*__makeList##run'"*#+__iterWhile+#+__iterWhile.+#*__makeList##run'"*#-__validateFor+#-__validateFor.+#*__makeList##run'"*#.__switchFailed+#.__switchFailed.+#*__makeList##run'"*#/__makeVerbFacet+#/__makeVerbFacet.+#*__makeList##run'"*#*__comparer+#*__comparer.+#*__makeList##run'"*#*__suchThat+#*__suchThat.+#*__makeList##run'"*#+__matchSame+#+__matchSame.+#*__makeList##run'"*#&__bind+#&__bind.+#*__makeList##run'"*#.__quasiMatcher+#.__quasiMatcher.+#*__makeList##run'"*#+__splitList+#+__splitList.+#*__makeList##run'"*#!M+#!M.+#*__makeList##run'"*#&import+#&import.+#*__makeList##run'"*#%throw+#%throw.+#*__makeList##run'"*#*typhonEval+#*typhonEval5+#,preludeScope.+#,preludeScope#"or'!.+#&import##run'"*#1prelude/monte_ast.+#,preludeScope#"or'!.+#)__makeMap#)fromPairs'!.+#*__makeList##run'".+#*__makeList##run'"*#/DeepFrozenStamp+#/DeepFrozenStamp.+#*__makeList##run'"*#0TransparentStamp+#0TransparentStamp.+#2_installASTBuilder##run'!.+#,preludeScope##get'!*#*astBuilder5+#,preludeScope.+#,preludeScope#"or'!.+#&import##run'"*#.prelude/simple+#,preludeScope5+#,preludeScope.+#,preludeScope#"or'!.+#&import##run'"*#-prelude/brand+#,preludeScope5+#,preludeScope.+#,preludeScope#"or'!.+#&import##run'"*#4prelude/protocolDesc+#,preludeScope/?.+#,__mapExtract##run'!*#2OrderedRegionMaker>'";+#2OrderedRegionMaker ?.+#,__mapExtract##run'!*#1OrderedSpaceMaker>'";+#1OrderedSpaceMaker <+#*__mapEmpty   .+#&import##run'"*#.prelude/region+#,preludeScope5+#,preludeScope..+#&import##run'"*#-prelude/space.+#,preludeScope#"or'!.+#)__makeMap#)fromPairs'!.+#*__makeList##run'".+#*__makeList##run'"*#2OrderedRegionMaker+#2OrderedRegionMaker.+#*__makeList##run'"*#1OrderedSpaceMaker+#1OrderedSpaceMaker#"or'!+#,preludeScope5+#,preludeScope.+#,preludeScope#"or'!.+#&import##run'"*#)prelude/b+#,preludeScope5+#,preludeScope.+#,preludeScope#"or'!.+#&import##run'"*#4lib/monte/termParser+#,preludeScope5+#,preludeScope.+#,preludeScope#"or'!.+#&import##run'"*#)prelude/m+#,preludeScope.+#,preludeScope#"or'!.+#)__makeMap#)fromPairs'!.+#*__makeList##run'#.+#*__makeList##run'"*#$void+#$Void.+#*__makeList##run'"*#*__mapEmpty+#%Empty.+#*__makeList##run'"*#(_flexMap+#(_flexMap